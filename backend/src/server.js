const http = require('http');
const app = require('./app');
const db = require('./database/models');
const PORT = process.env.PORT || 3000;

async function startServer() {
  try {
    // Testar conex√£o com o banco de dados
    await db.sequelize.authenticate();
    console.log('‚úÖ Conectado ao banco de dados PostgreSQL com Sequelize');

    // Sincronizar models (cuidado em produ√ß√£o - usar migrations ao inv√©s)
    // await db.sequelize.sync();
    // console.log('‚úÖ Models sincronizados com o banco de dados');

    // Criar servidor HTTP com o Express app
    const server = http.createServer(app);

    // Iniciar o servidor HTTP
    server.listen(PORT, () => {
      console.log(`üöÄ Servidor NauticAir rodando em http://localhost:${PORT}`);
      console.log(`üìä API dispon√≠vel em http://localhost:${PORT}/api`);
    });

    // Tratamento de erros n√£o capturados
    process.on('unhandledRejection', (reason, promise) => {
      console.error('‚ùå Rejei√ß√£o n√£o tratada em:', promise, 'raz√£o:', reason);
      process.exit(1);
    });

    process.on('uncaughtException', (error) => {
      console.error('‚ùå Exce√ß√£o n√£o capturada:', error);
      process.exit(1);
    });

  } catch (error) {
    console.error('‚ùå Erro ao iniciar servidor:', error.message);
    console.error(error.stack);
    process.exit(1);
  }
}

startServer();